----- May 10th -----
-> I tried to implement a buffer/a string that dynamically grows.  This is only used for the ADD operation I began.

-> I used a bit mask for both ADD and ADDA (has no functionality) so that they can be recognized.  Because of this,
I have a comparison that checks for #$FFFF, at the beginnig because bitmasks don't work on all one's.  So all it
does is print 'ADD', still need to do EA stuff.

-> I got rid of the subroutine that prints the addresses, and instead put it towards the beginning of the SEARCH subroutine,
I think this simplifies a little more, and will avoid any JSRs that are out of range.

--- May 13th ----
-> Made some progress on ADD.  It will print the size of operation and, right now it can only print the data register when it 
is the <Ea>.  Example:
ADD.B D7,$2

Will only print:
ADD.B D7

-> I think I have made the part for recognizing the register number fairly modular, so hopefully we can implement it into other op-codes,
because it works with JSR/RTS.
